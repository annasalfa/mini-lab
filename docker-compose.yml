version: "3.9"

services:
  nginx_waf:
    image: owasp/modsecurity-crs:nginx
    ports: ["8080:80"]
    depends_on: [graphql_api]
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/modsecurity.conf:/etc/modsecurity.d/include.conf:ro
    networks: [labnet]

  auth:
    build: ./auth-jwks
    environment:
      - ISSUER=http://auth:8080
      - AUDIENCE=graphql-api
      - PORT=8080
    ports: ["8081:8080"]
    networks: [labnet]

  vault:
    image: hashicorp/vault:1.15
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=root
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
    ports: ["8200:8200"]
    cap_add: ["IPC_LOCK"]
    command: vault server -dev
    networks: [labnet]

  vault_init:
    image: hashicorp/vault:1.15
    depends_on: [vault]
    environment:
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=root
    entrypoint: ["/bin/sh","/init.sh"]
    volumes:
      - ./vault/init.sh:/init.sh:ro
    networks: [labnet]

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=lab
      - POSTGRES_PASSWORD=labpass
      - POSTGRES_DB=labdb
    ports: ["5433:5432"]
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks: [labnet]

  graphql_api:
    build: ./app
    environment:
      - PORT=4000
      - DATABASE_URL=postgres://lab:labpass@postgres:5432/labdb
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=root
      - TRANSIT_KEY_NAME=sek
      - AUTH_ISSUER=http://auth:8080
      - AUTH_AUDIENCE=graphql-api
      - JWKS_URL=http://auth:8080/.well-known/jwks.json
    depends_on: [postgres, vault, vault_init, auth]
    ports: ["4000:4000"]
    networks: [labnet]

networks:
  labnet: {}
